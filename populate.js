// populate db with mock data generated by https://www.mockaroo.com/ (100 documents)

import { readFile } from 'fs/promises';
import mongoose from 'mongoose';
import dotenv from 'dotenv';
dotenv.config();

import Job from './models/JobModel.js';
import User from './models/UserModel.js';

/*** test/demo user -> nthompson@email.com ***/

try {
  await mongoose.connect(process.env.MONGO_URL);

  // find demo/test user
  const user = await User.findOne({ email: 'nthompson@email.com' });

  // add mock jobs to demo/test user
  const jsonMockJobs = JSON.parse(
    await readFile(new URL('./utils/mockData.json', import.meta.url))
  );
  const mockJobs = jsonMockJobs.map((job) => ({ ...job, createdBy: user._id }));
  await Job.deleteMany({ createdBy: user._id });
  await Job.create(mockJobs);
  console.log('Success! Test/demo user data created.');
  process.exit();
} catch (error) {
  console.log(error);
  process.exit(1);
}

/*** admin user -> sprescott@email.com ***/

// try {
//   await mongoose.connect(process.env.MONGO_URL);

//   // find demo/test user
//   const user = await User.findOne({ email: 'sprescott@email.com' });

//   // add mock jobs to demo/test user
//   const jsonMockJobs = JSON.parse(
//     await readFile(new URL('./utils/mockData.json', import.meta.url))
//   );
//   const mockJobs = jsonMockJobs.map((job) => ({ ...job, createdBy: user._id }));
//   await Job.deleteMany({ createdBy: user._id });
//   await Job.create(mockJobs);
//   console.log('Success! Admin user data created.');
//   process.exit();
// } catch (error) {
//   console.log(error);
//   process.exit(1);
// }
